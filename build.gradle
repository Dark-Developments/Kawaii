plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        url 'https://jitpack.io'
    }

    flatDir {
        dirs 'lib'
    }
}

configurations {
    implementation.extendsFrom(library)
    shadow.extendsFrom(library)

    libImpl
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    include implementation ("io.github.spair:imgui-java-binding:1.89.0")
	include implementation("io.github.spair:imgui-java-lwjgl3:1.89.0") {
		exclude module: "lwjgl"
		exclude module: "lwjgl-glfw"
		exclude module: "lwjgl-opengl"
		exclude module: "lwjgl-bom"
	}
	include implementation ("io.github.spair:imgui-java-natives-macos:1.89.0")
	include implementation ("io.github.spair:imgui-java-natives-windows:1.89.0")
	include implementation ("io.github.spair:imgui-java-natives-linux:1.89.0")

    libImpl(name: "EthanolAPI")

    configurations.libImpl.dependencies.each {
        implementation(it)
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }

    from {
        configurations.libImpl.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
